# participant will see <<<<<, >>>>>, <<><< or >><>>
# 50% congruent <<<<< or >>>>> and 50% incongruent <<><< or >><>>
# participant respond with L ctrl or Rctrl
# depending on where the middle arrows point
# paradigm starts with 20 practice trials with feedback
# Stim duration is 200ms 
# ISI = random(1500,2000)
##ET##
eye_tracker EyeLink = new eye_tracker( "PresLink" );#this starts the eyetracker , the name of this (currently "PresLink") is whatever your extention is called (sometimes "EyeTracker")
int dummy_mode = 0; #if this is 1 you can run the paradigm without eyetracking
if dummy_mode == 1 then
	EyeLink.set_parameter("tracker_address", "");
end;         
#connect to Eyelink tracker.
EyeLink.start_tracking();
string edfname_final = logfile.subject() + "Flank_1"; #names the EDF file, choose here the name of your individual edf file
string edfname_out = "Flank_1";

#here we are checking if the edf file already exists and if so it add a +1 to the ending
int cntr = 1;
loop
	bool good_edfname = false; 
until
	good_edfname == true
begin
	if file_exists(logfile_directory + edfname_final + ".edf") then
		cntr = cntr + 1;
		edfname_final = logfile.subject() + "Flank_" + string(cntr); # + ".edf";
		edfname_out = "Flank_" + string(cntr) 
	else
		good_edfname = true
	end;
end;

if edfname_out.count() > 8 then
	exit("EDF Filename needs to be smaller than 8 characters long (letters, numbers and underscores only)"); #if your EDF filename is longer it might start giving trouble specially if you do more than 9 blocks
end;
array<string> temp[0];
edfname_out.split(".", temp);
edfname_out = temp[1];
EyeLink.set_parameter("open_edf_file",edfname_out+".edf");
int display_height = display_device.height();
int display_width  = display_device.width();
EyeLink.send_command("screen_pixel_coords 0 0 " + string(display_width-1) + 
	" " + string(display_height-1));
EyeLink.send_message("DISPLAY_COORDS " + "0 0 " + string(display_width-1) + 
	" " + string(display_height-1)); 
string Eyelink_ver = EyeLink.get_parameter("tracker_version"); # get et version
array <string> string_array[5];
Eyelink_ver.split(" ",string_array);
double el_v = double(string_array[3]); 
EyeLink.send_command("file_event_filter = LEFT,RIGHT,FIXATION,SACCADE,BLINK,MESSAGE,BUTTON,INPUT");	#this ensures that Gaze data is recorded 
EyeLink.send_command("link_event_filter = LEFT,RIGHT,FIXATION,SACCADE,BLINK,BUTTON,INPUT");
if (el_v >=4.0) then
	EyeLink.send_command("file_sample_data = LEFT,RIGHT,GAZE,AREA,GAZERES,STATUS,HTARGET,INPUT"); #Area token ensures Pupil size is recorded.
	EyeLink.send_command("link_sample_data = LEFT,RIGHT,GAZE,GAZERES,AREA,STATUS,HTARGET,INPUT");
else
	EyeLink.send_command("file_sample_data = LEFT,RIGHT,GAZE,AREA,GAZERES,STATUS,INPUT");
	EyeLink.send_command("link_sample_data = LEFT,RIGHT,GAZE,GAZERES,AREA,STATUS,INPUT"); 
end;
EyeLink.calibrate( et_calibrate_default, 1.0, 0.0, 0.0 );
sub cleanup begin
	EyeLink.send_command("set_idle_mode"); #eyelink goes in idle mode
	EyeLink.send_command("clear_screen 0");#clear Host PC screen at end of session
	wait_interval(500); 
	EyeLink.send_command("close_data_file");#close the EDF file and then allow 100 msec to ensure it's closed
	if dummy_mode != 1 then
		EyeLink.set_parameter("get_edf_file",logfile_directory + edfname_final + ".edf");#transfer the EDF file to the logfile directory of the experiment	on the Display PC
	end;
	EyeLink.stop_tracking();
end;	
EyeLink.send_command("set_idle_mode");
wait_interval(50);#in ms
EyeLink.send_command("clear_screen 0") #clearing screen
EyeLink.set_parameter("transfer_image", et_bit.filename()); #this will be on the hostpc's screen



int ntrls = 120; # number of trials

array <string> flanker_array[4];
flanker_array[1] = "<<<<<";
flanker_array[2] = ">>>>>";
flanker_array[3] = ">><>>";
flanker_array[4] = "<<><<";


array <string> my_flanker[ntrls];   #used for creating the full strings that should show up
array <int> my_port_code[ntrls]; 			#used for adding the correct port code
array <int> n_flanker[ntrls];       #used this to make sure that there are equal amounts of each of the conditions

loop # this loop makes sure that there are equal amounts of 0/3/5/7 consonant strings in each block
int i = 1;
until
i > ntrls 
begin
	n_flanker[i] =1; #adding <<<<<
	i = i + 1;	
	n_flanker[i] =2; #adding >>>>>
	i = i + 1;
	n_flanker[i] =3; #adding >><>>
	i = i + 1;
	n_flanker[i] =4; #adding <<><<
	i = i + 1; 
end;
n_flanker.shuffle(); #randomizing the trials, but thanks to the loop before we are sure there are equal amounts of both 

loop #this loop will assign all the info to each trial
int i = 1; 
until 
i > ntrls
begin
	if n_flanker[i] == 1 then
		my_flanker[i] = flanker_array[1];
		my_port_code[i] = 11;
	elseif n_flanker[i]== 2 then
		my_flanker[i] = flanker_array[2];
		my_port_code[i] = 22;
	elseif n_flanker[i]== 3 then
		my_flanker[i] = flanker_array[3];
		my_port_code[i] = 33;
	elseif n_flanker[i]== 4 then
		my_flanker[i] = flanker_array[4];
		my_port_code[i] = 44;
	end;
	i =i +1;
end;

## start of the paradigm

loop ## so you have to double click and biosemi starts recording only then
int start = 1;
until
start>2
begin
	start_trial.present();
	start = start +1;
end;
wait_trial.present();

int i=1; int isi;
loop	 
until
	i > ntrls 
begin	
	### ET ###
	EyeLink.send_command("record_status_message 'visual trial " + string(i) + "/120 start'");	
	EyeLink.send_string( "TRIALID " + string(i));
	### setting up flanker ###
	pic_s1.clear(); 
	s1_txt.set_caption(my_flanker[i]);
	s1_txt.redraw();
	pic_s1.add_part(s1_txt,0,0);
	s1_trigger.set_port_code(my_port_code[i]);
	s1_trigger.set_event_code(string(my_port_code[i]));
	EyeLink.send_message("stimulus_onset"); # put this in the line before you present your stimulus in the PCL file
	s1_trial.present(); 
	### flanker is done, randomizing and presenting ISI ###
	isi = random(1500,2000);
	if my_port_code[i] == 11 || my_port_code[i] == 33 then
		isi_trial_left.set_duration(isi);
		isi_trial_left.present();
	elseif my_port_code[i] == 22 || my_port_code[i] == 44 then 
		isi_trial_right.set_duration(isi);
		isi_trial_right.present();
	end;
	i =i +1; # this is where it goes to the new trial 	
   EyeLink.send_command("record_status_message 'EndTrial'");
	EyeLink.send_message("TRIAL_RESULT 0");	
end;
end_block_trial.present();
cleanup();	
end_trial.present();